import Head from 'next/head';

import client from '@lib/apolloClient';
import postsQueries from '@lib/queries/posts';
import { PostItem } from '@components';

// import DUMMY_DATA from 'DUMMY_DATA/allArticles.json';

export async function getServerSideProps() {
    // const posts: TypePostItem[] = DUMMY_DATA.data.allArticles;

    const { data } = await client.query({
        query: postsQueries.getAll(),
    });

    return {
        props: {
            posts: data.allArticles,
        },
    };
}

export default function Home({ posts }: HomeProps) {
    return (
        <>
            <Head>
                <title>Next.js boilerplate with TypeScript, Tailwind, and GraphQL</title>
                <meta name="description" content="Generated by create next app" />
            </Head>

            <div className="divide-y divide-gray-200 dark:divide-gray-700">
                <div className="space-y-2 pt-6 pb-8 md:space-y-5">
                    <h1 className="text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:text-6xl md:leading-14">
                        Latest
                    </h1>

                    <p className="text-lg leading-7 text-gray-500 dark:text-indigo-300">
                        Next.js boilerplate with TypeScript, Tailwind, and GraphQL
                    </p>
                </div>

                {posts.length ? (
                    <ul className="divide-y divide-gray-200 dark:divide-gray-700">
                        {posts.map((postItem: TypePostItem) => (
                            <li key={postItem.slug} className="py-12">
                                <PostItem data={postItem} />
                            </li>
                        ))}
                    </ul>
                ) : (
                    <p className="pt-6 font-extrabold">No posts found.</p>
                )}
            </div>
        </>
    );
}
